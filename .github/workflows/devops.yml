name: DevOps

on:
  push:
    branches:
      - main

concurrency:
  group: devops

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: NODE_ENV=production npm run build

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

        # TODO avoid using root user for security reasons
      - name: Deploy to production
        run: |
          echo "Deploying to production server..."
          echo "${{ secrets.SSH_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          # upload the client build
          scp -i /tmp/ssh_key -r dist root@${{ secrets.DROPLET_IP }}:Code/zomboban
          # upload the backend
          scp -i /tmp/ssh_key -r src root@${{ secrets.DROPLET_IP }}:Code/zomboban
          # restart the backend
          ssh -i /tmp/ssh_key root@${{ secrets.DROPLET_IP }} "cd Code/zomboban && npm install && pm2 restart serve"

  lighthouse:
    runs-on: ubuntu-latest
    needs: [build_and_deploy]
    steps:
    - uses: actions/checkout@master
    - name: Lighthouse
      uses: foo-software/lighthouse-check-action@master
      with:
        fooApiToken: ${{ secrets.FOO_API_TOKEN }}
        urls: "http://${{ secrets.DROPLET_IP }}"
