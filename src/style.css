@import url("missing.min.css");

@font-face {
  font-family: "LimeGreen";
  src: url("/assets/fonts/MintsodaLimeGreen13X16Regular.ttf");
}

:root {
  --ratio: 1.618;
  --main-font: "LimeGreen";

  --canvas-native-size: 1024;
  --canvas-screen-size: min(100vw, 100vh);
  --canvas-screen-px-per-native-px: calc(
    var(--canvas-screen-size) / var(--canvas-native-size)
  );

  /* The canvas's native resolution is 1024x1024 and we're using a pixel font
   * so we want the simulated pixels in the font to match the pixels on the canvas.
   * Setting the font size accordingly.
   */
  --font-size: calc(var(--canvas-screen-px-per-native-px) * 24);
  --rhythm: calc(var(--font-size) * 1.25);

  --eff-line-length: auto;

  --button-color: var(--gray-9);
  --button-hover-color: var(--gray-8);
  --button-highlight-color: var(--gray-5);
  --button-shadow-color: var(--gray-11);

  --button-width: calc(var(--canvas-screen-px-per-native-px) * 50);
  --button-height: calc(var(--button-width) * var(--ratio));
  --toolbar-vertical-padding: calc(var(--canvas-screen-px-per-native-px) * 12);
  --toolbar-height: calc(var(--button-height) + var(--toolbar-vertical-padding) * 2);
  --canvas-size: min(100vh - var(--toolbar-height), 100vw);
}

body {
  background-color: blueviolet;

  font-size: var(--font-size);
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: none;

  height: 100vh;
  image-rendering: pixelated;
}

button,
input[type="submit"],
input[type="reset"],
input[type="button"],
.\<button\>,
.tool-bar {
  background-color: var(--button-color);
  border-width: calc(var(--canvas-screen-px-per-native-px) * 2);
  border-top-color: var(--button-highlight-color);
  border-left-color: var(--button-highlight-color);
  border-bottom-color: var(--button-shadow-color);
  border-right-color: var(--button-shadow-color);
  margin: var(--toolbar-vertical-padding) 0;
}

button,
input[type="submit"],
input[type="reset"],
input[type="button"],
.\<button\> {
  width: var(--button-width);
  height: var(--button-height);
  /* override missing.css */
  border-radius: 0;
  display: flex;
  box-shadow: none;

  & img {
    width: calc(var(--button-width) - 2 * var(--canvas-screen-px-per-native-px));
    height: calc(var(--button-width) - 2 * var(--canvas-screen-px-per-native-px));
  }

  &:hover,
  &:focus-visible {
    background-color: var(--button-hover-color);
    /* Override missing.css */
    filter: none;
    /* Override missing.css */
    box-shadow: none !important;
  }

  &:active,
  &.is-pressed {
    border-top-color: var(--button-shadow-color);
    border-left-color: var(--button-shadow-color);
    border-bottom-color: var(--button-highlight-color);
    border-right-color: var(--button-highlight-color);

    & img {
      position: relative;
      top: calc(var(--canvas-screen-px-per-native-px) * 2);
      left: calc(var(--canvas-screen-px-per-native-px) * 2);
    }
  }
}

input[type="checkbox"] {
  height: var(--font-size);
  width: var(--font-size);
}
button,
input:not([type]),
input[type="button"],
input[type="submit"],
input[type="text"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="email"],
input[type="password"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="number"],
select,
textarea {
  font-size: var(--font-size);
  padding: calc(var(--font-size) / 2);
  cursor: pointer;
}

select {
  height: var(--button-height);
}

canvas {
  display: block;
  width: 100%;
  max-width: var(--canvas-size);
  height: auto;
}

dialog[open] {
  animation: unfold 0.8s;
  border-radius: 0;
  border-width: var(--canvas-screen-px-per-native-px) * 2;
  overflow: auto;
}

dialog[open]::backdrop {
  background-image: url("/assets/images/modal-background.gif");
  background-size: 50%;
  animation: bg-slide 10s ease infinite;
  opacity: 1;
}

button.\<a\> {
  padding: 0;
  height: auto;
  display: flex;
  align-items: baseline;

  &:hover,
  &:focus-visible {
    background-color: transparent;
    text-decoration: underline;
  }
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.vh {
  display: none !important;
  visibility: hidden;
}

.top {
  top: 0;
}

.bottom {
  bottom: 0;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.absolute {
  position: absolute;
}

.z-index\:1 {
  z-index: 1;
}

.z-index\:2 {
  z-index: 2;
}

.z-index\:3 {
  z-index: 3;
}

/* TODO missing.css provides some of this already */
.display\:block {
  display: block;
}
.display\:none {
  display: none;
}

.display\:inline {
  display: inline;
}
.display\:flex {
  display: flex;
}
.flex-grow\:1 {
  flex-grow: 1;
}
.flex-shrink\:1 {
  flex-shrink: 1;
}

.pointer-events\:none {
  pointer-events: none;
}

.text-align\:center {
  text-align: center;
}

.static {
  position: static;
}

.padding\:0 {
  padding: 0;
}

.margin\:0 {
  margin: 0;
}

.flash {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.margin-right\:0\.5em {
  margin-right: 0.5em;
}

[z-src] {
  opacity: 0;
  transition: opacity 0.5s;

  &.z-loaded {
    opacity: 1;
  }
}

[z-hide-until-init] {
  opacity: 0;
  display: none;

  .z-init & {
    opacity: 1;
    display: initial;
  }
}

.canvasShrinkwrap {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  position: relative;

  text-shadow: calc(var(--canvas-screen-px-per-native-px) * 2)
    calc(var(--canvas-screen-px-per-native-px) * 2) rgba(0, 0, 0, 0.75);
}

.RequestIndicator {
  .RequestIndicator-progress {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 12rem;
    max-width: 100%;
  }

  img {
    flex-grow: 1;
    flex-shrink: 1;
  }

  progress {
    margin-left: 1rem;
    width: 80%;
  }

  .RequestIndicator-message {
    overflow-x: auto;
    text-wrap: nowrap;
  }
}

@keyframes unfold {
  0% {
    transform: scale(0, 0.1);
  }
  50% {
    transform: scale(1, 0.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes bg-slide {
  0% {
    background-position: 0% 0%;
  }
  25% {
    background-position: 100% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
}
