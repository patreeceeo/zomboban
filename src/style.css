@import url('missing.min.css');

@font-face {
  font-family: 'LimeGreen';
  src: url('/assets/fonts/MintsodaLimeGreen13X16Regular.ttf');
}

:root {
  --main-font: 'LimeGreen';

  --canvas-native-size: 1024;
  --canvas-screen-size: min(100vw, 100vh);
  --canvas-screen-px-per-native-px: calc(var(--canvas-screen-size) / var(--canvas-native-size));


  /* The canvas's native resolution is 1024x1024 and we're using a pixel font
   * so we want the simulated pixels in the font to match the pixels on the canvas.
   * Setting the font size accordingly.
   */
  --font-size: calc(var(--canvas-screen-px-per-native-px) * 24);
  --rhythm: calc(var(--font-size) * 1.25);

  --eff-line-length: auto;

  --button-color: var(--gray-9);
  --button-hover-color: var(--gray-8);
  --button-highlight-color: var(--gray-5);
  --button-shadow-color: var(--gray-11);

  --button-height: calc(var(--canvas-screen-px-per-native-px) * 50);
  --toolbar-height: var(--button-height);
  --canvas-size: min(100vh - var(--toolbar-height), 100vw);
}

body {
  background-color: blueviolet;

  font-size: var(--font-size);
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: none;

  height: 100vh;
}


img {
  image-rendering: pixelated;
}

button,
input[type="submit"],
input[type="reset"],
input[type="button"],
.\<button\>,
.tool-bar {
  background-color: var(--button-color);
  border-width: calc(var(--canvas-screen-px-per-native-px) * 2);
  border-top-color: var(--button-highlight-color);
  border-left-color: var(--button-highlight-color);
  border-bottom-color: var(--button-shadow-color);
  border-right-color: var(--button-shadow-color);
}

button,
input[type="submit"],
input[type="reset"],
input[type="button"],
.\<button\> {
  height: var(--button-height);
  /* override missing.css */
  border-radius: 0;
  display: flex;
  box-shadow: none;

  & img {
    height: calc(var(--canvas-screen-px-per-native-px) * 48);
    width: calc(var(--canvas-screen-px-per-native-px) * 48);
  }

  &:hover, &:focus-visible {
    background-color: var(--button-hover-color);
    /* Override missing.css */
    filter: none;
    box-shadow: none;
  }

  &:active, &.is-pressed {
    border-top-color: var(--button-shadow-color);
    border-left-color: var(--button-shadow-color);
    border-bottom-color: var(--button-highlight-color);
    border-right-color: var(--button-highlight-color);

    & img {
      position: relative;
      top: calc(var(--canvas-screen-px-per-native-px) * 2);
      left: calc(var(--canvas-screen-px-per-native-px) * 2);
    }
  }
}

input[type=checkbox] {
  height: var(--font-size);
  width: var(--font-size);
}
button, input:not([type]), input[type=button], input[type=submit], input[type=text],input[type=search],input[type=tel],input[type=url],input[type=email],input[type=password],input[type=date],input[type=month],input[type=week],input[type=time],input[type=datetime],input[type=datetime-local],input[type=number],select,textarea {
  font-size: var(--font-size);
  padding: calc(var(--font-size) / 2);
  cursor: pointer;
}

canvas {
  display: block;
  height: var(--canvas-size);
  width: var(--canvas-size);
}

dialog[open] {
  animation: unfold 0.8s;
}

button.\<a\> {
  padding: 0;
  height: auto;
  display: flex;
  align-items: baseline;

  &:hover, &:focus-visible {
    background-color: transparent;
    text-decoration: underline;
  }
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.canvasShrinkwrap {
  height: var(--canvas-size);
  width: var(--canvas-size);
  margin: 0 auto;

  position: relative;

  text-shadow: calc(var(--canvas-screen-px-per-native-px) * 2) calc(var(--canvas-screen-px-per-native-px) * 2) rgba(0, 0, 0, 0.75);
}

.vh {
  display: none !important;
}

.top {
  top: 0;
}

.bottom {
  bottom: 0;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.fillAndExpand {
  min-width: 100%;
  min-height: 100%;
}

.absolute {
  position: absolute;
}

.z-index\:1 {
  z-index: 1;
}

.z-index\:2 {
  z-index: 2;
}

.z-index\:3 {
  z-index: 3;
}

/* TODO missing.css provides some of this already */
.display\:block {
  display: block;
}
.display\:none {
  display: none;
}

.display\:inline {
  display: inline;
}
.display\:flex {
  display: flex;
}

.pointer-events\:none {
  pointer-events: none;
}

.text-align\:center {
  text-align: center;
}

.static {
  position: static;
}

.padding\:0 {
  padding: 0;
}

.flash {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.margin-right\:0\.5em {
  margin-right: 0.5em;
}

[z-src] {
  opacity: 0;
  transition: opacity 0.5s;

  &.z-loaded {
    opacity: 1;
  }
}

[z-hide-until-init] {
  opacity: 0;

  .z-init & {
    opacity: 1;
  }
}

@keyframes unfold {
  0% {
    transform: scale(0, 0.1);
  }
  50% {
    transform: scale(1, 0.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes bg-slide {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}


dialog[open]::backdrop {
  background-image: linear-gradient(
    45deg,
    blue,
    violet
  );
  opacity: 0.75;
  animation: bg-slide 10s ease infinite;
}
